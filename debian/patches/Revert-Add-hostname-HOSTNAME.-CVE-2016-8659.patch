From: Simon McVittie <smcv@debian.org>
Date: Thu, 13 Oct 2016 10:56:39 +0100
Subject: Revert "Add --hostname HOSTNAME." (CVE-2016-8659)

This reverts commit 75f86d30ef8d8a0ef85e31b8fd980555d308b871.

The SETUP_SET_HOSTNAME operation is problematic when not creating
a new UTS namespace, since it would affect the entire system.
bwrap prevents this from being done via its command-line interface,
but it can be induced to do it anyway via ptrace.

Bug: https://github.com/projectatomic/bubblewrap/issues/107
Bug-Debian: https://bugs.debian.org/840605
---
 bubblewrap.c           | 41 +----------------------------------------
 bwrap.xml              |  4 ----
 completions/bash/bwrap |  1 -
 3 files changed, 1 insertion(+), 45 deletions(-)

diff --git a/bubblewrap.c b/bubblewrap.c
index f459af4..41bcfb0 100644
--- a/bubblewrap.c
+++ b/bubblewrap.c
@@ -65,13 +65,8 @@ typedef enum {
   SETUP_MAKE_RO_BIND_FILE,
   SETUP_MAKE_SYMLINK,
   SETUP_REMOUNT_RO_NO_RECURSIVE,
-  SETUP_SET_HOSTNAME,
 } SetupOpType;
 
-typedef enum {
-  NO_CREATE_DEST = (1 << 0),
-} SetupOpFlag;
-
 typedef struct _SetupOp SetupOp;
 
 struct _SetupOp
@@ -80,7 +75,6 @@ struct _SetupOp
   const char *source;
   const char *dest;
   int         fd;
-  SetupOpFlag flags;
   SetupOp    *next;
 };
 
@@ -105,7 +99,6 @@ enum {
   PRIV_SEP_OP_DEVPTS_MOUNT,
   PRIV_SEP_OP_MQUEUE_MOUNT,
   PRIV_SEP_OP_REMOUNT_RO_NO_RECURSIVE,
-  PRIV_SEP_OP_SET_HOSTNAME,
 };
 
 typedef struct
@@ -123,7 +116,6 @@ setup_op_new (SetupOpType type)
 
   op->type = type;
   op->fd = -1;
-  op->flags = 0;
   if (last_op != NULL)
     last_op->next = op;
   else
@@ -168,7 +160,6 @@ usage (int ecode, FILE *out)
            "    --unshare-cgroup-try         Create new cgroup namespace if possible else continue by skipping it\n"
            "    --uid UID                    Custom uid in the sandbox (requires --unshare-user)\n"
            "    --gid GID                    Custon gid in the sandbox (requires --unshare-user)\n"
-           "    --hostname NAME              Custom hostname in the sandbox (requires --unshare-uts)\n"
            "    --chdir DIR                  Change directory to DIR\n"
            "    --setenv VAR VALUE           Set an environment variable\n"
            "    --unsetenv VAR               Unset an environment variable\n"
@@ -593,11 +584,6 @@ privileged_op (int         privileged_op_socket,
         die_with_error ("Can't mount mqueue on %s", arg1);
       break;
 
-    case PRIV_SEP_OP_SET_HOSTNAME:
-      if (sethostname (arg1, strlen(arg1)) != 0)
-        die_with_error ("Can't set hostname to %s", arg1);
-      break;
-
     default:
       die ("Unexpected privileged op %d", op);
     }
@@ -625,8 +611,7 @@ setup_newroot (bool unshare_pid,
             die_with_error ("Can't get type of source %s", op->source);
         }
 
-      if (op->dest &&
-          (op->flags & NO_CREATE_DEST) == 0)
+      if (op->dest)
         {
           dest = get_newroot_path (op->dest);
           if (mkdir_with_parents (dest, 0755, FALSE) != 0)
@@ -833,12 +818,6 @@ setup_newroot (bool unshare_pid,
             die_with_error ("Can't make symlink at %s", op->dest);
           break;
 
-        case SETUP_SET_HOSTNAME:
-          privileged_op (privileged_op_socket,
-                         PRIV_SEP_OP_SET_HOSTNAME, 0,
-                         op->dest, NULL);
-          break;
-
         default:
           die ("Unexpected type %d", op->type);
         }
@@ -908,7 +887,6 @@ int opt_sync_fd = -1;
 int opt_block_fd = -1;
 int opt_info_fd = -1;
 int opt_seccomp_fd = -1;
-char *opt_sandbox_hostname = NULL;
 
 
 static void
@@ -1379,20 +1357,6 @@ parse_args_recurse (int    *argcp,
           argv += 1;
           argc -= 1;
         }
-      else if (strcmp (arg, "--hostname") == 0)
-        {
-          if (argc < 2)
-            die ("--hostname takes an argument");
-
-          op = setup_op_new (SETUP_SET_HOSTNAME);
-          op->dest = argv[1];
-          op->flags = NO_CREATE_DEST;
-
-          opt_sandbox_hostname = argv[1];
-
-          argv += 1;
-          argc -= 1;
-        }
       else if (*arg == '-')
         {
           die ("Unknown option %s", arg);
@@ -1504,9 +1468,6 @@ main (int    argc,
   if (!opt_unshare_user && opt_sandbox_gid != gid)
     die ("Specifying --gid requires --unshare-user");
 
-  if (!opt_unshare_uts && opt_sandbox_hostname != NULL)
-    die ("Specifying --hostname requires --unshare-uts");
-
   /* We need to read stuff from proc during the pivot_root dance, etc.
      Lets keep a fd to it open */
   proc_fd = open ("/proc", O_RDONLY | O_PATH);
diff --git a/bwrap.xml b/bwrap.xml
index 507f66f..854e20e 100644
--- a/bwrap.xml
+++ b/bwrap.xml
@@ -133,10 +133,6 @@
       <term><option>--gid <arg choice="plain">GID</arg></option></term>
       <listitem><para>Use a custom group id in the sandbox (requires <option>--unshare-user</option>)</para></listitem>
     </varlistentry>
-    <varlistentry>
-      <term><option>--hostname <arg choice="plain">HOSTNAME</arg></option></term>
-      <listitem><para>Use a custom hostname in the sandbox (requires <option>--unshare-uts</option>)</para></listitem>
-    </varlistentry>
   </variablelist>
   <para>Options about environment setup:</para>
   <variablelist>
diff --git a/completions/bash/bwrap b/completions/bash/bwrap
index 34780ba..d94eb26 100644
--- a/completions/bash/bwrap
+++ b/completions/bash/bwrap
@@ -34,7 +34,6 @@ _bwrap() {
 		--file
 		--file-label
 		--gid
-		--hostname
 		--info-fd
 		--lock-file
 		--proc
